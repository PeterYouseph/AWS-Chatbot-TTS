# Arquivo de configuração do Serverless Framework

# Organização cadastrada
org: pollyttscompass
# Serviço de API para conversão de texto em fala (TTS) com AWS Polly
service: api-tts
frameworkVersion: '3'

plugins:
  - serverless-python-requirements
  - serverless-dotenv-plugin
	
useDotenv: true

custom:
  pythonRequirements:
    dockerizePip: true

provider:
  name: aws
  runtime: python3.10
  region: us-east-1
  environment:
    BUCKET_NAME: ${env:BUCKET_NAME}
    DYNAMODB_TABLE: ${env:DYNAMODB_TABLE}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:ListTables
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:CreateTable
            - dynamodb:DescribeTable
            - dynamodb:UpdateTable
          Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${env:DYNAMODB_TABLE}
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:CreateBucket
            - s3:HeadBucket
          Resource: arn:aws:s3:::${env:BUCKET_NAME}/*
        - Effect: Allow
          Action:
            - polly:SynthesizeSpeech
          Resource: "*"

functions:
  health:
    handler: handler.health
    events:
      - http:
          path: /
          method: get

  v1Description:
    handler: handler.v1_description
    events:
      - http:
          path: /v1
          method: get

  tts:
    handler: handler.tts
    events:
      - http:
          path: /v1/tts
          method: post

resources:
  Resources:
    TTSTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${env:BUCKET_NAME}
